-- BACKEND DATABASE

-----------
-- USERS --
-----------

CREATE TABLE users_type (
    name TEXT PRIMARY KEY
);

INSERT INTO users_type
VALUES ('ADMIN'), ('BASE'), ('PREMIUM');

CREATE TABLE users (
    email TEXT NOT NULL UNIQUE,
    password TEXT NOT NULL,
    type TEXT NOT NULL,
    FOREIGN KEY (type) REFERENCES type (name),
    PRIMARY KEY (email, password)
);

INSERT INTO users
VALUES
    ('mariorossi@gmail.com', 'mariorossi', 'ADMIN'),
    ('luigiverdi@gmail.com', 'luigiverdi', 'PREMIUM'),
    ('pippofranco@gmail.com', 'pippofranco', 'BASE'),
    ('pluto@gmail.com', 'pluto', 'BASE');

-- SELECT * FROM users;

-- DELETE FROM users;

----------------
-- POSTI AUTO --
----------------

CREATE TABLE slots_status (
    status TEXT PRIMARY KEY
);

INSERT INTO slots_status
VALUES ('FREE'), ('OCCUPIED');

CREATE TABLE slots (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    status TEXT NOT NULL,
    FOREIGN KEY (status) REFERENCES slots_status (status)
);

-- Il parcheggio da 10 posti auto chiamati slot
INSERT INTO slots (status)
VALUES
    ('FREE'),
    ('FREE'),
    ('FREE'),
    ('FREE'),
    ('FREE'),
    ('FREE'),
    ('FREE'),
    ('FREE'),
    ('FREE'),
    ('FREE');

-- SELECT * FROM slots;

-- DELETE FROM slots;
-- DELETE FROM sqlite_sequence WHERE name='slots';

---------------
-- RICHIESTE --
---------------

CREATE TABLE requests (
    email TEXT NOT NULL,
    datetime_start DATETIME NOT NULL,
    datetime_end DATETIME NOT NULL,
    kw INTEGER DEFAULT NULL,
    paid BOOLEAN NOT NULL DEFAULT FALSE,
    slot_id INTEGER NOT NULL,
    FOREIGN KEY (email) REFERENCES users (email),
    FOREIGN KEY (slot_id) REFERENCES slots (id),
    PRIMARY KEY (email, datetime_start)
);

-- INSERT INTO requests
-- VALUES
--     ('pippofranco@gmail.com', '2025-02-24T12:00:00', '2025-02-24T13:00:00', NULL, FALSE, 3),
--     ('mariorossi@gmail.com', '2025-02-24T10:00:00', '2025-02-24T11:00:00', 25, TRUE, 1),
--     ('luigiverdi@gmail.com', '2025-02-24T11:00:00', '2025-02-24T12:00:00', NULL, FALSE, 2),
--     ('pluto@gmail.com', '2025-02-24T13:00:00', '2025-02-24T14:00:00', 10, FALSE, 1);

-- SELECT * FROM requests;

-- DELETE FROM requests;

------------------
-- PRENOTAZIONI --
------------------

CREATE TABLE reservations (
    email TEXT NOT NULL,
    datetime_start DATETIME NOT NULL,
    datetime_end DATETIME NOT NULL,
    slot_id INTEGER NOT NULL,
    percentage INTEGER DEFAULT NULL,
    FOREIGN KEY (email) REFERENCES users (email),
    FOREIGN KEY (slot_id) REFERENCES slots (id),
    PRIMARY KEY (email, datetime_start),
    CHECK (percentage >= 0 AND percentage <= 100)
);

-- INSERT INTO reservations
-- VALUES
--     ('mariorossi@gmail.com', '2025-03-28T16:00:00', '2025-03-28T16:00:30', 1,  50),
--     ('luigiverdi@gmail.com', '2025-03-28T16:00:30', '2025-03-28T17:00:30', 2,  80),
--     ('pippofranco@gmail.com', '2025-03-28T12:00:00', '2025-03-28T13:00:30', 3, NULL),
--     ('plutonano@gmail.com', '2025-03-28T13:00:00', '2025-03-28T14:00:30', 4, NULL);

-- SELECT * FROM reservations;

-- DELETE FROM reservations;

------------
-- PREZZI --
------------

CREATE TABLE prices_type (
    name TEXT PRIMARY KEY
);

INSERT INTO prices_type
VALUES ('PARKING'), ('CHARGING');

CREATE TABLE prices (
    type TEXT PRIMARY KEY,
    price REAL NOT NULL,
    CHECK (type IN ('PARKING', 'CHARGING')),
    CHECK (price > 0)
);

INSERT INTO prices
VALUES ('PARKING', 0.5), ('CHARGING', 0.9);

-----------
-- MULTE --
-----------

CREATE TABLE fines (
    email TEXT NOT NULL,
    datetime_start DATETIME NOT NULL,
    datetime_end DATETIME NOT NULL,
    paid BOOLEAN NOT NULL DEFAULT FALSE,
    FOREIGN KEY (email) REFERENCES users (email),
    PRIMARY KEY (email, datetime_start)
);

-- SELECT * FROM fines;

-- DELETE FROM fines;

----------------
-- CODA MWBOT --
----------------

CREATE TABLE queue (
    slot_id INTEGER PRIMARY KEY,
    percentage INTEGER NOT NULL,
    phone_number TEXT NOT NULL,
    FOREIGN KEY (slot_id) REFERENCES slots (id),
    CHECK (percentage >= 0 AND percentage <= 100),
    CHECK (LENGTH(phone_number) = 10)
);

-- INSERT INTO queue
-- VALUES
--     (1, 50, '1234567890'),
--     (2, 80, '1234567891'),
--     (3, 100, '1234567892');

-- SELECT * FROM queue;

-- DELETE FROM queue;

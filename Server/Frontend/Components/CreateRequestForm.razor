@using Shared.DTOs.Request

<input type="radio" class="btn-check" name="options-base" id="PARKING" autocomplete="off">
<label class="btn btn-outline-secondary mx-2" for="PARKING"
    @onclick="() => HandleSelectServiceSubmit(Sosta)"
>Sosta</label>

<input type="radio" class="btn-check" name="options-base" id="CHARGING" autocomplete="off">
<label class="btn btn-outline-secondary mx-2" for="CHARGING"
    @onclick="() => HandleSelectServiceSubmit(Ricarica)"
>Ricarica</label>

@if (SelectedServiceType == null)
    return;

<div class="mt-3"></div>

<form method="post" @onsubmit="Submit">
    <div class="mb-3">
        <label for="requestDatetimeEnd" class="form-label">How many minutes do you want to stay?</label>
        <input class="form-control" id="requestDatetimeEnd" @bind="ParkingDuration">
    </div>

@if(SelectedServiceType == "CHARGING")
{
    <div class="mb-3">
        <label for="requestPercentage" class="form-label">How many percent do you want to charge?</label>
        <input class="form-control" id="requestPercentage" @bind="Percentage">
    </div>

    <div class="mb-3">
        <label for="requestPhoneNumber" class="form-label">Phone Number</label>
        <input class="form-control" id="requestPhoneNumber" @bind="PhoneNumber">
    </div>
}

    <button type="submit" class="btn btn-primary">Submit</button>
</form>

@code {
    private const string Ricarica = "CHARGING";
    private const string Sosta = "PARKING";

    [Parameter]
    public required EventCallback<RequestFormResponse> OnClickCallback { get; set; }

    private string? SelectedServiceType { get; set; }

    private int ParkingDuration { get; set; }

    private int? Percentage { get; set; }

    private string? PhoneNumber { get; set; }

    public class RequestFormResponse
    {
        public int ParkingDuration { get; set; }
        public int? Percentage { get; set; }
        public string? PhoneNumber { get; set; }
    }

    private void HandleSelectServiceSubmit(string selectedServiceType)
    {
        if (selectedServiceType == null ||
            (selectedServiceType != "PARKING" && selectedServiceType != "CHARGING"))
            return;

        ResetState();

        SelectedServiceType = selectedServiceType;
    }

    private void Submit()
    {
        RequestFormResponse response = new()
        {
            ParkingDuration = ParkingDuration,
            Percentage = Percentage,
            PhoneNumber = PhoneNumber
        };

        OnClickCallback.InvokeAsync(response);
    }

    private void ResetState()
    {
        SelectedServiceType = null;
        ParkingDuration = 0;
        Percentage = null;
        PhoneNumber = null;
    }
}

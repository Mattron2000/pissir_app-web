@rendermode InteractiveWebAssembly
@using Frontend.States
@using Shared.DTOs

@inject AuthState AuthState
@inject AuthStateNotifier AuthStateNotifier
@inject NavigationManager NavigationManager

<nav class="navbar bg-body-tertiary px-3 justify-content-end top-row">
    @if (AuthState.User != null)
    {
    <div class="dropdown me-2">
        <button class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
            @AuthState.User.Surname @AuthState.User.Name
        </button>
        <ul class="dropdown-menu">
            <li><button class="dropdown-item" @onclick="() => AuthState.SetUser(null)">Logout</button></li>
        </ul>
    </div>
    }
</nav>

@code
{
    protected override void OnInitialized()
    {
        AuthStateNotifier.Subscribe(StateHasChanged);
    }

    public void Dispose()
    {
        AuthStateNotifier.Unsubscribe(StateHasChanged);
    }
}
